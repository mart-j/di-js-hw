{"version":3,"sources":["chartOptions/chartOptions.ts","components/featureImportance/FeatureImportance.tsx","components/nanStabilityAnalysis/NanStabilityAnalysis.tsx","components/stabilityAnalysis/StabilityAnalysis.tsx","components/valueDistribution/ValueDistribution.tsx","helpers/helpers.ts","App.tsx","index.tsx","components/stabilityAnalysis/StabilityAnalysis.module.scss","components/valueDistribution/ValueDistribution.module.scss","App.module.scss","components/featureImportance/FeatureImportance.module.scss"],"names":["FIOptions","showChartHandler","title","display","text","fontSize","legend","scales","yAxes","ticks","mirror","z","fontColor","onClick","event","element","index","_index","onHover","e","target","style","cursor","NSOptions","position","SAOptions","FeatureDistribution","chartData","showChart","state","useRef","labels","map","item","name","datasets","backgroundColor","context","dataIndex","1","2","3","stabilityGroup","data","importance","className","styles","featureImportanceWrapper","current","height","options","overlay","NanStabilityAnalysis","selectedPosition","Object","keys","nanStabilityAnalysis","yBaseline","yProduction","chartWrapper","StabilityAnalysis","xLeftEdge","label","psi","toFixed","buttonWrapper","ValueDistribution","closeChartHandler","useState","toggleChart","setToggleChart","navWrapper","nav","classNames","stability","active","closeButton","positionName","filteredFSData","filteredFIData","newData","reduce","acc","values","sort","a","b","mergeData","_FEATURE_STABILITY","parameterStability","productionModelMetrics","entries","stabilityAnalysis","num","Number","Math","max","getFeatureStabitityData","_FEATURE_IMPRTANCE","metrics","featureImportance","names","i","getFeatureImportanceData","FEATURE_IMPORTANCE","App","setShowChart","setSelectedPostition","container","valueDistributionWrapper","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3752463f.chunk.js","sourcesContent":["export const FIOptions = (showChartHandler: Function) => {\n  return {\n    title: {\n      display: true,\n      text: 'Feature Importance',\n      fontSize: 20,\n    },\n    legend: {\n      display: false,\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: { mirror: false, fontSize: 10, z: 2, fontColor: '#0f0f0ff0' },\n        },\n      ],\n    },\n    onClick: (event: Event, element: { _index: number }[]) => {\n      if (element[0]) {\n        const index = element[0]._index;\n        showChartHandler(index);\n      }\n    },\n\n    onHover: (e: MouseEvent, element: { _index: number }[]) => {\n      const target = e.target as HTMLCanvasElement;\n      if (element[0]) {\n        target.style.cursor = 'pointer';\n      } else {\n        target.style.cursor = 'auto';\n      }\n    },\n  };\n};\n\nexport const NSOptions = {\n  title: {\n    display: true,\n    text: 'Nan Stability Analysis',\n    fontSize: 20,\n    position: 'bottom',\n  },\n  legend: {\n    display: false,\n  },\n};\n\nexport const SAOptions = {\n  title: {\n    display: true,\n    text: 'Stability Analysis',\n    fontSize: 20,\n    position: 'bottom',\n  },\n  legend: {\n    display: true,\n    position: 'right',\n  },\n};\n","import React, { FC, useRef } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport { ChartData } from '../../types/types';\nimport { FIOptions } from '../../chartOptions/chartOptions';\nimport styles from './FeatureImportance.module.scss';\n\ninterface Props {\n  showChartHandler: (index: number) => void;\n  chartData: ChartData[];\n  showChart: boolean;\n}\n\nconst FeatureDistribution: FC<Props> = ({ showChartHandler, chartData, showChart }) => {\n\n  const state = useRef({\n    labels: chartData.map((item) => item.name),\n    datasets: [\n      {\n        backgroundColor: (context: { dataIndex: number }) => {\n          const index = context.dataIndex;\n          const backgroundColor: { [key: number]: string } = {\n            1: '#0095ffcf',\n            2: '#ffb100cf',\n            3: '#ff200094',\n          };\n          return backgroundColor[chartData[index].stabilityGroup];\n        },\n        data: chartData.map((item) => item.importance),\n      },\n    ],\n  });\n\n  return (\n    <div className={styles.featureImportanceWrapper}>\n      <HorizontalBar\n        data={state.current}\n        height={300}\n        options={FIOptions(showChartHandler)}\n      />\n      {showChart && <div className={styles.overlay}></div>}\n    </div>\n  );\n};\nexport default FeatureDistribution;\n","import React, { FC, useRef } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { NSOptions } from '../../chartOptions/chartOptions';\nimport { ChartData } from '../../types/types';\nimport styles from './NanStabilityAnalysis.module.scss';\n\n\ninterface Props {\n  selectedPosition: ChartData;\n}\n\nconst NanStabilityAnalysis: FC<Props> = ({ selectedPosition }) => {\n\n  const state = useRef({\n    labels: Object.keys(selectedPosition.nanStabilityAnalysis),\n    datasets: [\n      {\n        backgroundColor: ['#ec3929d4', '#dfed39c7'],\n        data: [selectedPosition.nanStabilityAnalysis.yBaseline[0],\n          selectedPosition.nanStabilityAnalysis.yProduction[0],\n        ],\n      },\n    ],\n  });\n\n  return (\n    <div className={styles.chartWrapper}>\n      <Bar\n        data={state.current}\n        options={NSOptions}\n      />\n    </div>\n  );\n};\nexport default NanStabilityAnalysis;\n","import React, { FC, useRef } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { SAOptions } from '../../chartOptions/chartOptions';\nimport { ChartData } from '../../types/types';\nimport styles from './StabilityAnalysis.module.scss';\n\n\ninterface Props {\n  selectedPosition: ChartData\n}\n\nconst StabilityAnalysis: FC<Props> = ({ selectedPosition }) => {\n\n  const state = useRef({\n    labels: selectedPosition.xLeftEdge,\n    datasets: [\n      {\n        label: 'yBaseline',\n        backgroundColor: '#e4ff00',\n        data: selectedPosition.yBaseline,\n      },\n      {\n        label: 'yProduction',\n        backgroundColor: '#ec3929d4',\n        data: selectedPosition.yProduction,\n      },\n    ],\n  });\n\n  return (\n    <div className={styles.chartWrapper}>\n      <div className={styles.psi}>\n        {`Population stability index: ${selectedPosition.psi.toFixed(2)}`}\n      </div>\n      <div className={styles.buttonWrapper}>\n      </div>\n      <Bar\n        data={state.current}\n        options={SAOptions}\n      />\n    </div>\n  );\n};\nexport default StabilityAnalysis;\n","import React, { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { ChartData } from '../../types/types';\nimport NanStabilityAnalysis from '../nanStabilityAnalysis/NanStabilityAnalysis';\nimport StabilityAnalysis from '../stabilityAnalysis/StabilityAnalysis';\nimport styles from './ValueDistribution.module.scss';\n\ninterface Props {\n  selectedPosition: ChartData;\n  closeChartHandler: () => void;\n}\n\nconst ValueDistribution: FC<Props> = ({\n  selectedPosition,\n  closeChartHandler,\n}) => {\n  const [toggleChart, setToggleChart] = useState(false);\n\n  return (\n    <div className={styles.chartWrapper}>\n          <div className={styles.navWrapper}>\n            <div className={styles.nav}>\n              <div\n                onClick={() => setToggleChart(false)}\n                className={classNames({\n                  [styles.stability]: true,\n                  [styles.active]: !toggleChart,\n                })}\n              >\n                Stability\n              </div>\n              <div\n                onClick={() => setToggleChart(true)}\n                className={classNames({\n                  [styles.stability]: true,\n                  [styles.active]: toggleChart,\n                })}\n              >\n                Nan Stability\n              </div>\n            </div>\n          </div>\n          <div>\n            <button onClick={closeChartHandler} className={styles.closeButton}>\n              X\n            </button>\n          </div>\n      {toggleChart ? (\n        <NanStabilityAnalysis selectedPosition={selectedPosition} />\n      ) : (\n        <StabilityAnalysis selectedPosition={selectedPosition} />\n      )}\n      <div className={styles.positionName}>{selectedPosition.name}</div>\n    </div>\n  );\n};\nexport default ValueDistribution;\n","import {\n  FilteredFSData,\n  FilteredFIData,\n  FeatureStabilityType,\n  ChartData,\n  FeatureImportanceType,\n} from '../types/types';\nimport FEATURE_IMPORTANCE from '../data/feature_importance.json';\nimport FEATURE_STABILITY from '../data/feature_stability.json';\n\nexport const getFeatureStabitityData = (\n  _FEATURE_STABILITY: FeatureStabilityType,\n) => {\n  const {\n    data: {\n      productionModelMetrics: { parameterStability },\n    },\n  } = _FEATURE_STABILITY;\n  const parameterStabilityArr = Object.entries(parameterStability).map(\n    ([name, data]) => {\n      return {\n        name,\n        yBaseline: data.stabilityAnalysis.yBaseline,\n        yProduction: data.stabilityAnalysis.yProduction,\n        xLeftEdge: data.stabilityAnalysis.xLeftEdge.map((num) =>\n          Number(num.toFixed(2)),\n        ),\n        psi: data.stabilityAnalysis.psi[0],\n        stabilityGroup: Math.max(\n          data.nanStabilityAnalysis.stabilityGroup[0],\n          data.stabilityAnalysis.stabilityGroup[0],\n        ),\n        nanStabilityAnalysis: {\n          yProduction: data.nanStabilityAnalysis.yProduction,\n          yBaseline: data.nanStabilityAnalysis.yBaseline,\n        },\n      };\n    },\n  );\n\n  return parameterStabilityArr;\n};\n\nexport const getFeatureImportanceData = (\n  _FEATURE_IMPRTANCE: FeatureImportanceType,\n) => {\n  const {\n    data: {\n      featureImportance: { metrics },\n    },\n  } = _FEATURE_IMPRTANCE;\n  const { names, importance } = metrics;\n\n  return names.map((name, i) => {\n    return { name, importance: importance[i] };\n  });\n};\n\nexport const mergeData = (\n  filteredFSData: FilteredFSData[],\n  filteredFIData: FilteredFIData[],\n) => {\n  const newData = [...filteredFSData, ...filteredFIData].reduce((acc, item) => {\n    if (!acc[item.name]) {\n      acc[item.name] = { ...item };\n    } else {\n      acc[item.name] = {\n        ...acc[item.name],\n        ...item,\n      };\n    }\n    return acc;\n  }, {} as { [key: string]: {} });\n  const merged = Object.values(newData) as ChartData[];\n\n  return merged.sort((a, b) => {\n    return b.importance - a.importance;\n  });\n};\n\nexport const chartData = mergeData(\n  getFeatureStabitityData(FEATURE_STABILITY),\n  getFeatureImportanceData(FEATURE_IMPORTANCE),\n);\n","import React, { useState } from 'react';\nimport FeaturImportance from './components/featureImportance/FeatureImportance';\nimport ValueDistribution from './components/valueDistribution/ValueDistribution';\nimport { chartData } from './helpers/helpers';\nimport { ChartData } from './types/types';\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [showChart, setShowChart] = useState(false);\n  const [selectedPosition, setSelectedPostition] = useState<ChartData>();\n\n\n  const showChartHandler = (index: number) => {\n    setSelectedPostition(chartData![index]);\n    setShowChart(true);\n  };\n\n  const closeChartHandler = () => {\n    setShowChart(false);\n  };\n\n  return (\n    <div className={styles.container}>\n\n      <div className={styles.featureImportanceWrapper}>\n        <FeaturImportance\n          chartData={chartData}\n          showChartHandler={showChartHandler}\n          showChart={showChart}\n        />\n      </div >\n      {\n        selectedPosition && showChart &&\n        <div className={styles.valueDistributionWrapper}>\n          <ValueDistribution\n            closeChartHandler={closeChartHandler}\n            selectedPosition={selectedPosition} />\n        </div>\n      }\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"psi\":\"StabilityAnalysis_psi__3dbHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartWrapper\":\"ValueDistribution_chartWrapper__35f-w\",\"positionName\":\"ValueDistribution_positionName__T1Tnh\",\"buttonWrapper\":\"ValueDistribution_buttonWrapper__3lzJr\",\"navWrapper\":\"ValueDistribution_navWrapper__2NV-T\",\"nav\":\"ValueDistribution_nav__sazRf\",\"stability\":\"ValueDistribution_stability__2PkoK\",\"nanStability\":\"ValueDistribution_nanStability__LlEqq\",\"active\":\"ValueDistribution_active__1rCXL\",\"closeButton\":\"ValueDistribution_closeButton__2x2ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__eSJ6i\",\"valueDistributionWrapper\":\"App_valueDistributionWrapper__3PiVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"featureImportanceWrapper\":\"FeatureImportance_featureImportanceWrapper__3yYer\",\"overlay\":\"FeatureImportance_overlay__meU-i\"};"],"sourceRoot":""}