{"version":3,"sources":["components/valueDistribution/ValueDistribution.module.scss","components/featureImportance/FeatureImportance.tsx","components/nanStabilityAnalysis/NanStabilityAnalysis.tsx","components/stabilityAnalysis/StabilityAnalysis.tsx","components/valueDistribution/ValueDistribution.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.scss","components/featureImportance/FeatureImportance.module.scss"],"names":["module","exports","defaults","global","defaultFontSize","FeatureDistribution","showGraphHandler","chartData","showGraph","horizontalState","labels","map","item","name","datasets","backgroundColor","context","index","dataIndex","1","2","3","stabilityGroup","data","importance","className","styles","featureImportanceWrapper","height","options","title","display","text","fontSize","legend","onClick","event","element","_index","onHover","e","target","style","cursor","overlay","NanStabilityAnalysis","selectedPosition","distributionGraphState","label","nanStabilityAnalysis","yBaseline","yProduction","chartWrapper","buttonWrapper","position","StabilityAnalysis","xLeftEdge","ValueDistribution","closeChartHandler","useState","toogle","setToogle","switchButton","closeButton","App","setChartData","setShowGraph","setSelectedPostition","mergeChartsData","useRef","merge","_","parameterStability","FEATURE_STABILITY","productionModelMetrics","Object","entries","stabilityAnalysis","num","Number","toFixed","binWidth","Math","max","getParameterStabitityData","find","metrics","FEATURE_IMPRTANCE","featureImportance","names","i","getFeatureImportanceData","orderBy","useEffect","current","chartsWrapper","valueDistributionWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b32e88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartWrapper\":\"ValueDistribution_chartWrapper__35f-w\",\"switchButton\":\"ValueDistribution_switchButton__2Exnz\",\"buttonWrapper\":\"ValueDistribution_buttonWrapper__3lzJr\",\"closeButton\":\"ValueDistribution_closeButton__2x2ZL\"};","import React, { FC } from 'react';\nimport { HorizontalBar, defaults } from 'react-chartjs-2';\nimport { ChartData } from '../../types';\nimport styles from './FeatureImportance.module.scss';\n\ndefaults.global.defaultFontSize = 10;\n\ninterface Props {\n  showGraphHandler: (index: number) => void;\n  chartData: ChartData[];\n  showGraph: boolean;\n}\n\n\n\n\nconst FeatureDistribution: FC<Props> = ({ showGraphHandler, chartData, showGraph }) => {\n  const horizontalState = {\n    labels: chartData.map((item) => item.name),\n    datasets: [\n      {\n        backgroundColor: (context: { dataIndex: number }) => {\n          const index = context.dataIndex;\n          const backgroundColor: { [key: number]: string } = {\n            1: '#0095ffcf',\n            2: '#ffb100cf',\n            3: '#ff0000cf',\n          };\n          return backgroundColor[chartData[index].stabilityGroup];\n        },\n        data: chartData.map((item) => item.importance),\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.featureImportanceWrapper}>\n      <HorizontalBar\n        data={horizontalState}\n        height={280}\n        options={{\n          title: {\n            display: true,\n            text: 'Feature Importance',\n            fontSize: 20,\n          },\n          legend: {\n            display: false,\n          },\n\n          onClick: (event: Event, element: { _index: number }[]) => {\n            if (element[0]) {\n              const index = element[0]._index;\n              showGraphHandler(index);\n            }\n          },\n\n          onHover: (e: MouseEvent, element: { _index: number }[]) => {\n            const target = e.target as HTMLCanvasElement;\n            if (element[0]) {\n              target.style.cursor = 'pointer';\n            } else {\n              target.style.cursor = 'auto';\n            }\n          },\n        }}\n      />\n      {showGraph && <div className={styles.overlay}></div>}\n    </div>\n  );\n};\nexport default FeatureDistribution;\n","import React, { FC } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { ChartData } from '../../types';\nimport styles from './NanStabilityAnalysis.module.scss';\n\n\ninterface Props {\n  selectedPosition: ChartData;\n}\n\nconst NanStabilityAnalysis: FC<Props> = ({ selectedPosition }) => {\n\n  const distributionGraphState = {\n    datasets: [\n      {\n        label: 'yBaseline',\n        backgroundColor: '#68a9ffeb',\n        data: selectedPosition.nanStabilityAnalysis.yBaseline,\n\n      },\n      {\n        label: 'yProduction',\n        backgroundColor: '#fcff00b8',\n        data: selectedPosition.nanStabilityAnalysis.yProduction,\n\n\n      },\n\n\n    ],\n  };\n\n  return (\n        <div className={styles.chartWrapper}>\n            <div className={styles.buttonWrapper}>\n            </div>\n            <Bar\n                data={distributionGraphState}\n                options={{\n                  title: {\n                    display: true,\n                    text: 'Nan Stability Analysis',\n                    fontSize: 20,\n                    position: 'bottom',\n                  },\n                  legend: {\n                    display: true,\n                    position: 'right',\n                  },\n                }}\n            />\n        </div>\n  );\n};\nexport default NanStabilityAnalysis;\n","import React, { FC } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { ChartData } from '../../types';\nimport styles from './StabilityAnalysis.module.scss';\n\n\ninterface Props {\n  selectedPosition: ChartData\n}\n\nconst StabilityAnalysis: FC<Props> = ({ selectedPosition }) => {\n\n  const distributionGraphState = {\n    labels: selectedPosition.xLeftEdge,\n    datasets: [\n      {\n        label: 'yBaseline',\n        backgroundColor: '#e4ff00',\n    \n        data: selectedPosition.yBaseline,\n      },\n      {\n        label: 'yProduction',\n        backgroundColor: '#ed11fb',\n        data: selectedPosition.yProduction,\n      },\n    ],\n  };\n\n  return (\n        <div className={styles.chartWrapper}>\n            <div className={styles.buttonWrapper}>\n            </div>\n            <Bar\n                data={distributionGraphState}\n                options={{\n                  title: {\n                    display: true,\n                    text: 'Stability Analysis',\n                    fontSize: 20,\n                    position: 'bottom',\n                  },\n                  legend: {\n                    display: true,\n                    position: 'right',\n                  },\n                }}\n            />\n        </div>\n  );\n};\nexport default StabilityAnalysis;\n","import React, { FC, useState } from 'react';\nimport NanStabilityAnalysis from '../nanStabilityAnalysis/NanStabilityAnalysis';\nimport StabilityAnalysis from '../stabilityAnalysis/StabilityAnalysis';\nimport { ChartData } from '../../types';\nimport styles from './ValueDistribution.module.scss';\n\ninterface Props {\n  selectedPosition: ChartData;\n  closeChartHandler: () => void;\n}\n\nconst ValueDistribution: FC<Props> = ({ selectedPosition, closeChartHandler }) => {\n  const [toogle, setToogle] = useState(false);\n\n  const switchButtonText = () => {\n    if (!toogle) {\n      return 'Switch to Nan Stability Analysis';\n    }\n    return 'Switch to Stability Analysis';\n  };\n\n\n  return (\n        <div className={styles.chartWrapper}>\n            <div className={styles.buttonWrapper}>\n                <div></div>\n                <div>\n                    <button onClick={()=> setToogle(!toogle)} className={styles.switchButton}>{switchButtonText()}</button>\n                </div>\n                <div>\n                    <button onClick={closeChartHandler} className={styles.closeButton}>X</button>\n                </div>\n\n            </div>\n            {      toogle ?\n                    <NanStabilityAnalysis selectedPosition={selectedPosition} /> :\n                    <StabilityAnalysis selectedPosition={selectedPosition} />\n            }\n\n        </div>\n  );\n};\nexport default ValueDistribution;\n","import React, { useEffect, useRef, useState } from 'react';\nimport _ from 'lodash';\nimport FEATURE_IMPRTANCE from './data/feature_importance.json';\nimport FEATURE_STABILITY from './data/feature_stability.json';\nimport FeaturImportance from './components/featureImportance/FeatureImportance';\nimport ValueDistribution from './components/valueDistribution/ValueDistribution';\nimport { ChartData } from './types';\nimport styles from './App.module.scss';\n\nconst App = () => {\n  const [chartData, setChartData] = useState<ChartData[]>();\n  const [showGraph, setShowGraph] = useState(false);\n  const [selectedPosition, setSelectedPostition] = useState<ChartData>();\n\n\n\n  const getParameterStabitityData = () => {\n    const { data: { productionModelMetrics: { parameterStability } } } = FEATURE_STABILITY;\n    const parameterStabilityArr = Object.entries(parameterStability).map(\n      (item) => {\n        return {\n          name: item[0],\n          yBaseline: item[1].stabilityAnalysis.yBaseline,\n          yProduction: item[1].stabilityAnalysis.yProduction,\n          xLeftEdge: item[1].stabilityAnalysis.xLeftEdge.map((num) =>\n            Number(num.toFixed(2)),\n          ),\n          binWidth: item[1].stabilityAnalysis.binWidth[0],\n          stabilityGroup: Math.max(\n            item[1].nanStabilityAnalysis.stabilityGroup[0],\n            item[1].stabilityAnalysis.stabilityGroup[0],\n          ),\n          nanStabilityAnalysis: {\n            yProduction: item[1].nanStabilityAnalysis.yProduction,\n            yBaseline: item[1].nanStabilityAnalysis.yBaseline,\n          },\n        };\n      },\n    );\n    return parameterStabilityArr;\n  };\n\n\n\n  const getFeatureImportanceData = () => {\n    const { data: { featureImportance: { metrics } } } = FEATURE_IMPRTANCE;\n    const { names, importance } = metrics;\n    return names.map((name, i) => {\n      return { name, importance: importance[i] };\n    });\n  };\n\n\n\n  const mergeChartsData = useRef(() => {\n    const merge = _.map(getParameterStabitityData(),  (item) => {\n      return _.merge(item, _.find(getFeatureImportanceData(), { 'name' : item.name }));\n    });\n    return _.orderBy(merge, ['type', 'importance'], ['asc', 'desc']);\n    \n  });\n\n  useEffect(() => {\n    setChartData(mergeChartsData.current());\n  }, []);\n\n  const showGraphHandler = (index: number) => {\n    setSelectedPostition(chartData![index]);\n    setShowGraph(true);\n  };\n\n  const closeChartHandler = () => {\n    setShowGraph(false);\n  };\n\n\n\n  return (\n    <div className={styles.chartsWrapper}>\n      {chartData && (\n        <div className={styles.featureImportanceWrapper}>\n          <FeaturImportance\n            chartData={chartData}\n            showGraphHandler={showGraphHandler}\n            showGraph={showGraph}\n          />\n        </div >\n      )}\n      {\n        selectedPosition && showGraph &&\n        <div className={styles.valueDistributionWrapper}>\n          < ValueDistribution\n            closeChartHandler={closeChartHandler}\n            selectedPosition={selectedPosition} />\n        </div>\n      }\n\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartsWrapper\":\"App_chartsWrapper__1aHEt\",\"valueDistributionWrapper\":\"App_valueDistributionWrapper__3PiVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"featureImportanceWrapper\":\"FeatureImportance_featureImportanceWrapper__3yYer\",\"overlay\":\"FeatureImportance_overlay__meU-i\"};"],"sourceRoot":""}